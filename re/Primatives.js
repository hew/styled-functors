// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Functors = require("./Functors.js");
var Style$BsReactNative = require("bs-react-native/src/style.js");
var ReactNativeResponsiveFontsize = require("react-native-responsive-fontsize");

function paddingStyle(spaceType) {
  if (spaceType) {
    var spaceType$1 = spaceType[0];
    var variant = spaceType$1[0];
    if (variant !== 25096) {
      if (variant >= 25097) {
        var p = spaceType$1[1];
        return /* :: */[
                Style$BsReactNative.paddingTop(/* Pct */Block.__(1, [p])),
                /* :: */[
                  Style$BsReactNative.paddingBottom(/* Pct */Block.__(1, [p])),
                  /* [] */0
                ]
              ];
      } else {
        return /* :: */[
                Style$BsReactNative.padding(/* Pct */Block.__(1, [spaceType$1[1]])),
                /* [] */0
              ];
      }
    } else {
      var p$1 = spaceType$1[1];
      return /* :: */[
              Style$BsReactNative.paddingRight(/* Pct */Block.__(1, [p$1])),
              /* :: */[
                Style$BsReactNative.paddingLeft(/* Pct */Block.__(1, [p$1])),
                /* [] */0
              ]
            ];
    }
  } else {
    return /* [] */0;
  }
}

function marginStyle(marginType) {
  if (marginType) {
    var marginType$1 = marginType[0];
    var variant = marginType$1[0];
    if (variant >= 24421) {
      if (variant >= 24423) {
        return /* :: */[
                Style$BsReactNative.marginTop(/* Pct */Block.__(1, [marginType$1[1]])),
                /* [] */0
              ];
      } else {
        return /* :: */[
                Style$BsReactNative.marginRight(/* Pct */Block.__(1, [marginType$1[1]])),
                /* [] */0
              ];
      }
    } else if (variant >= 24415) {
      return /* :: */[
              Style$BsReactNative.marginLeft(/* Pct */Block.__(1, [marginType$1[1]])),
              /* [] */0
            ];
    } else {
      return /* :: */[
              Style$BsReactNative.marginBottom(/* Pct */Block.__(1, [marginType$1[1]])),
              /* [] */0
            ];
    }
  } else {
    return /* [] */0;
  }
}

function bgColorStyle(bg) {
  if (bg) {
    return /* :: */[
            Style$BsReactNative.backgroundColor(/* String */Block.__(0, [bg[0]])),
            /* [] */0
          ];
  } else {
    return /* [] */0;
  }
}

function style(paddingType, marginType, bgColor) {
  return Style$BsReactNative.style(List.append(List.flatten(/* :: */[
                      marginStyle(marginType),
                      /* :: */[
                        paddingStyle(paddingType),
                        /* :: */[
                          bgColorStyle(bgColor),
                          /* [] */0
                        ]
                      ]
                    ]), /* [] */0));
}

var Box = Functors.BoxView(/* module */[/* style */style]);

var baseStyle_000 = Style$BsReactNative.display(/* Flex */0);

var baseStyle = /* :: */[
  baseStyle_000,
  /* [] */0
];

function dirStyle(directionType) {
  if (directionType) {
    var directionType$1 = directionType[0];
    if (directionType$1 >= 5693978) {
      return /* :: */[
              Style$BsReactNative.flexDirection(/* Row */0),
              /* [] */0
            ];
    } else {
      return /* [] */0;
    }
  } else {
    return /* [] */0;
  }
}

function paddingStyle$1(spaceType) {
  if (spaceType) {
    var spaceType$1 = spaceType[0];
    var variant = spaceType$1[0];
    if (variant !== 25096) {
      if (variant >= 25097) {
        var p = spaceType$1[1];
        return /* :: */[
                Style$BsReactNative.paddingTop(/* Pct */Block.__(1, [p])),
                /* :: */[
                  Style$BsReactNative.paddingBottom(/* Pct */Block.__(1, [p])),
                  /* [] */0
                ]
              ];
      } else {
        return /* :: */[
                Style$BsReactNative.padding(/* Pct */Block.__(1, [spaceType$1[1]])),
                /* [] */0
              ];
      }
    } else {
      var p$1 = spaceType$1[1];
      return /* :: */[
              Style$BsReactNative.paddingRight(/* Pct */Block.__(1, [p$1])),
              /* :: */[
                Style$BsReactNative.paddingLeft(/* Pct */Block.__(1, [p$1])),
                /* [] */0
              ]
            ];
    }
  } else {
    return /* [] */0;
  }
}

function marginStyle$1(marginType) {
  if (marginType) {
    var marginType$1 = marginType[0];
    var variant = marginType$1[0];
    if (variant >= 24421) {
      if (variant >= 24423) {
        return /* :: */[
                Style$BsReactNative.marginTop(/* Pct */Block.__(1, [marginType$1[1]])),
                /* [] */0
              ];
      } else {
        return /* :: */[
                Style$BsReactNative.marginRight(/* Pct */Block.__(1, [marginType$1[1]])),
                /* [] */0
              ];
      }
    } else if (variant >= 24415) {
      return /* :: */[
              Style$BsReactNative.marginLeft(/* Pct */Block.__(1, [marginType$1[1]])),
              /* [] */0
            ];
    } else {
      return /* :: */[
              Style$BsReactNative.marginBottom(/* Pct */Block.__(1, [marginType$1[1]])),
              /* [] */0
            ];
    }
  } else {
    return /* [] */0;
  }
}

function flexStyle(flexType) {
  if (flexType) {
    var spaceType = flexType[0];
    if (spaceType >= 98248149) {
      if (spaceType >= 434500836) {
        if (spaceType >= 906229837) {
          return /* :: */[
                  Style$BsReactNative.justifyContent(/* SpaceAround */4),
                  /* [] */0
                ];
        } else {
          return /* :: */[
                  Style$BsReactNative.justifyContent(/* Center */2),
                  /* [] */0
                ];
        }
      } else if (spaceType >= 434500835) {
        return /* :: */[
                Style$BsReactNative.alignItems(/* Center */2),
                /* [] */0
              ];
      } else {
        return /* :: */[
                Style$BsReactNative.justifyContent(/* Center */2),
                /* :: */[
                  Style$BsReactNative.alignItems(/* Center */2),
                  /* [] */0
                ]
              ];
      }
    } else if (spaceType >= -162316795) {
      return /* :: */[
              Style$BsReactNative.alignItems(/* Stretch */3),
              /* [] */0
            ];
    } else {
      return /* :: */[
              Style$BsReactNative.alignItems(/* FlexEnd */1),
              /* [] */0
            ];
    }
  } else {
    return /* [] */0;
  }
}

function growStyle(growType) {
  if (growType) {
    return /* :: */[
            Style$BsReactNative.flex(1),
            /* [] */0
          ];
  } else {
    return /* [] */0;
  }
}

function bgColorStyle$1(bg) {
  if (bg) {
    return /* :: */[
            Style$BsReactNative.backgroundColor(/* String */Block.__(0, [bg[0]])),
            /* [] */0
          ];
  } else {
    return /* [] */0;
  }
}

function style$1(paddingType, marginType, flexType, directionType, grow, bgColor) {
  return Style$BsReactNative.style(List.append(List.flatten(/* :: */[
                      marginStyle$1(marginType),
                      /* :: */[
                        paddingStyle$1(paddingType),
                        /* :: */[
                          flexStyle(flexType),
                          /* :: */[
                            dirStyle(directionType),
                            /* :: */[
                              growStyle(grow),
                              /* :: */[
                                bgColorStyle$1(bgColor),
                                /* [] */0
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]), baseStyle));
}

var Flex = Functors.FlexView(/* module */[/* style */style$1]);

function paddingStyle$2(spaceType) {
  if (spaceType) {
    var spaceType$1 = spaceType[0];
    var variant = spaceType$1[0];
    if (variant !== 25096) {
      if (variant >= 25097) {
        var p = spaceType$1[1];
        return /* :: */[
                Style$BsReactNative.paddingTop(/* Pct */Block.__(1, [p])),
                /* :: */[
                  Style$BsReactNative.paddingBottom(/* Pct */Block.__(1, [p])),
                  /* [] */0
                ]
              ];
      } else {
        return /* :: */[
                Style$BsReactNative.padding(/* Pct */Block.__(1, [spaceType$1[1]])),
                /* [] */0
              ];
      }
    } else {
      var p$1 = spaceType$1[1];
      return /* :: */[
              Style$BsReactNative.paddingRight(/* Pct */Block.__(1, [p$1])),
              /* :: */[
                Style$BsReactNative.paddingLeft(/* Pct */Block.__(1, [p$1])),
                /* [] */0
              ]
            ];
    }
  } else {
    return /* [] */0;
  }
}

function marginStyle$2(marginType) {
  if (marginType) {
    var marginType$1 = marginType[0];
    var variant = marginType$1[0];
    if (variant >= 24421) {
      if (variant >= 24423) {
        return /* :: */[
                Style$BsReactNative.marginTop(/* Pct */Block.__(1, [marginType$1[1]])),
                /* [] */0
              ];
      } else {
        return /* :: */[
                Style$BsReactNative.marginRight(/* Pct */Block.__(1, [marginType$1[1]])),
                /* [] */0
              ];
      }
    } else if (variant >= 24415) {
      return /* :: */[
              Style$BsReactNative.marginLeft(/* Pct */Block.__(1, [marginType$1[1]])),
              /* [] */0
            ];
    } else {
      return /* :: */[
              Style$BsReactNative.marginBottom(/* Pct */Block.__(1, [marginType$1[1]])),
              /* [] */0
            ];
    }
  } else {
    return /* [] */0;
  }
}

function fontStyle(fontType) {
  if (fontType) {
    var fontType$1 = fontType[0];
    return /* :: */[
            Style$BsReactNative.fontSize(/* Float */Block.__(0, [ReactNativeResponsiveFontsize.default(fontType$1[1])])),
            /* [] */0
          ];
  } else {
    return /* [] */0;
  }
}

function colorStyle(color_) {
  if (color_) {
    return /* :: */[
            Style$BsReactNative.color(/* String */Block.__(0, [color_[0]])),
            /* [] */0
          ];
  } else {
    return /* [] */0;
  }
}

function centerStyle(center) {
  if (center) {
    return /* :: */[
            Style$BsReactNative.textAlign(/* Center */3),
            /* [] */0
          ];
  } else {
    return /* [] */0;
  }
}

function style$2(paddingType, marginType, fontType, color, center) {
  return Style$BsReactNative.style(List.append(List.flatten(/* :: */[
                      marginStyle$2(marginType),
                      /* :: */[
                        paddingStyle$2(paddingType),
                        /* :: */[
                          fontStyle(fontType),
                          /* :: */[
                            colorStyle(color),
                            /* :: */[
                              centerStyle(center),
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]), /* [] */0));
}

var T = Functors.Text(/* module */[/* style */style$2]);

exports.Box = Box;
exports.Flex = Flex;
exports.T = T;
/* Box Not a pure module */
